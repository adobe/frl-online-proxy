{"name":"Adobe FRL Proxy","tagline":"FRL-Online proxy for clients on isolated networks","body":"# frl-proxy\r\n\r\nReverse proxy solution for customers using FRL-Online on isolated networks.\r\n\r\n## Usage\r\n\r\n```\r\nfrl-proxy 0.4.0\r\nFRL Proxy\r\n\r\nUSAGE:\r\n    frl-proxy.exe <SUBCOMMAND>\r\n\r\nFLAGS:\r\n    -h, --help       Prints help information\r\n    -V, --version    Prints version information\r\n\r\nSUBCOMMANDS:\r\n    help           Prints this message or the help of the given subcommand(s)\r\n    init-config    Create a template config file\r\n    start          Start the proxy server\r\n```\r\n\r\n### `start`\r\n\r\nStart the proxy. By default, it will run a plain HTTP server listening on `127.0.0.1:3030`, forwarding to `https://lcs-cops.adobe.io`.\r\n\r\n```\r\nfrl-proxy.exe-start 0.4.0\r\nStart the proxy server\r\n\r\nUSAGE:\r\n    frl-proxy.exe start [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help       Prints help information\r\n        --ssl\r\n    -V, --version    Prints version information\r\n\r\nOPTIONS:\r\n    -c, --config-file <config-file>\r\n        --host <host>\r\n        --remote-host <remote-host>\r\n        --ssl-cert <ssl-cert>\r\n        --ssl-key <ssl-key>\r\n```\r\n\r\n### `init-config`\r\n\r\nInitialize a config file template. The config file is optional. It is used to define proxy defaults (host, remote host, ssl settings) and to\r\noverride logging defaults.\r\n\r\nThe `-o/--out-file` option defines the path to the new config file. By default, the file will be named `config.toml` and be placed in the\r\ncurrent working directory.\r\n\r\n```\r\nfrl-proxy.exe-init-config 0.4.0\r\nCreate a template config file\r\n\r\nUSAGE:\r\n    frl-proxy.exe init-config [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help       Prints help information\r\n    -V, --version    Prints version information\r\n\r\nOPTIONS:\r\n    -o, --out-file <out-file>     [default: config.toml]\r\n```\r\n\r\n## Building and Running\r\n\r\nTo build the proxy application, make sure you have the [Rust toolchain](https://rustup.rs/) installed on your system.\r\n\r\nThen, from a terminal, clone this project.\r\n\r\n```\r\n$ git clone git@git.corp.adobe.com:dmeservices/frl-proxy.git\r\n$ cd frl-proxy\r\n```\r\n\r\n### Running with Cargo\r\n\r\nTo run the proxy application, invoke `cargo run`. This installs dependencies, compiles, links, assembles and runs the executable.\r\n\r\n```\r\n$ cargo run -- start\r\n```\r\n\r\nAny commands or options specified after the `--` will be sent to the proxy application. For example, to start the proxy with a different host:\r\n\r\n```\r\n$ cargo run -- start --host 0.0.0.0:8080\r\n```\r\n\r\nThe first time you invoke `cargo run` it will take some time to install and build all dependencies. Subsequent `cargo run` invocations will skip the build and run the binary.\r\n\r\n### Building\r\n\r\nBuild the proxy application with `cargo build`. Once the build process completes, the `frl-proxy` binary can be found in the `target/debug` directory.\r\n\r\nThe proxy can also be built for release (which creates and optimized binary) with `cargo build --release`. This binary can be found in `target/release`.\r\n\r\n### Buliding on Ubuntu\r\n\r\nUbuntu requires a few system packages to be installed in order to build the application.\r\n\r\n```\r\n$ sudo apt install -y build-essential openssl-dev pkg-config\r\n```\r\n\r\nNOTE: This is known to be sufficient for Ubuntu 18.04, but should also work for Debian and other Debian variants.\r\n\r\n### Buliding on CentOS\r\n\r\nCentOS/RHEL also requires some system packages before the application can be built.\r\n\r\n```\r\n$ sudo yum install -y gcc openssl-devel\r\n```\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}