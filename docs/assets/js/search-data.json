{"0": {
    "doc": "User Guide",
    "title": "Adobe FRL Online Proxy User Guide",
    "content": " ",
    "url": "/frl-online-proxy/en/#adobe-frl-online-proxy-user-guide",
    "relUrl": "/en/#adobe-frl-online-proxy-user-guide"
  },"1": {
    "doc": "User Guide",
    "title": "Table of Contents",
    "content": ". | Overview . | Use Cases . | Live Proxy | Cache | Store and Forward | . | Setup Overview | . | Set up a server | Installing the Proxy . | Windows | Linux | . | Running the Proxy . | Command and usage summary | . | SSL | Cache, Store and Forward | Cache Management . | Clear | Export | Import | . | Working with an Upstream Proxy | Proxy Configuration . | Proxy Options | SSL Options | Logging Options | Cache Options | Network Options | . | Running as a service . | Windows | Linux | . | Creating proxy-enabled packages | Getting help | . ",
    "url": "/frl-online-proxy/en/#table-of-contents",
    "relUrl": "/en/#table-of-contents"
  },"2": {
    "doc": "User Guide",
    "title": "Overview",
    "content": "The FRL Online Proxy is a simple solution for managing feature-restricted (FRL) Adobe licenses in an isolated network. It is a caching, terminating reverse proxy that facilitates license management for client machines that have restricted online access. Each OS user of each Adobe application that activates via FRL Online must be able, when launching the application for the first time, to connect to Adobe’s licensing servers. If another OS user requires use of that same application (or if the original OS user wants to use a second application), then that other OS user (or that other application) must also, on their first launch, be able to connect to Adobe’s licensing servers. This “first launch while connected” requirement presents a challenge for customers whose networks have limited or no access to the Internet. On such networks, it may be infeasible or even impossible for users to have network access to Adobe servers when launching their applications for the first time. The FRL Online Proxy solves this customer problem by brokering requests to the licensing service on behalf of any client machine on the network. A customer who wishes to keep his users or their machines from contacting the internet can let them connect on their local network to the FRL Online Proxy, and then allow the FRL Online proxy to contact Adobe servers. This is completely safe for the customer, because the proxy will not accept anything but license requests from clients, and those requests will only be sent to the Adobe servers. For customers who want to put their proxy on an internal network with is either intermittently connected or never connected to Adobe licensing servers, the proxy also supports license caching and store/forward relay capabilities. The license caching means that, if there are multiple users on a machine who use the same application, the proxy needs to connect to Adobe only for one of them, because the resulting activation will automatically be reused for other users on that machine. The store/forward capability means that, if a customer deploys the proxy on a fully isolated network, they can use an administrative process to collect the stored activation requests, send them to Adobe, and get the responses back to the internal proxy. That internal proxy will then use the cached responses to activate all the internal machines. ",
    "url": "/frl-online-proxy/en/#overview",
    "relUrl": "/en/#overview"
  },"3": {
    "doc": "User Guide",
    "title": "Use Cases",
    "content": "Live Proxy . For simple use cases, the proxy can forward live calls directly to Adobe’s licensing service. This mode, known as passthrough mode, requires the server running the proxy have consistent live access to the licensing service. Cache . cache mode works similarly to passthrough except that it maintains a cache of license activation/deactivaction requests and their responses (if the licensing service can be reached). In cache mode, the proxy will attempt to forward the request to the licensing service. If the service is reachable, it will forward the response back to the FRL client. Whether or not the service is reachable, requests are cached. Responses for cached requests can be obtained by running the proxy in forward mode. cache mode will not automatically forward cached requests to the licensing service. Store and Forward . A Store and Forward setup requires two instances of the FRL Online Proxy. These instances can be set up on the same machine, different machines on the same network, or on different networks. | The instance running in store mode should be part of an isolated network where it will accept license requests from FRL-enabled applications. | The instance running forward mode must have live access to Adobe’s licensing service. | . store mode is similar to cache, except that no live calls to Adobe’s licensing service are attempted. All calls to the proxy are automatically cached. This mode is useful in situations where the server running the proxy cannot have live access to the Internet. If temporary access to Adobe’s licensing service can be permitted, then the proxy can run in forward mode to resolve license requests. Otherwise, cache data can be exported and transferred to a different machine (via USB drive for instance), where another instance of the proxy can resolve license requests in forward mode. In this case, resolved response data will need to be manually transferred back to the machine on the isolated network and imported into the “store mode” proxy instance’s database. See cache management for more information. forward mode is a special batch mode in which unresolved licensing requests are forwarded to Adobe’s licensing service. If the service is reachable then response data is stored in the cache database. Unlike the other modes, forward will not launch a proxy server that listens for new requests. Once all unresolved requests are attempted for resolution, the process will exit. ",
    "url": "/frl-online-proxy/en/#use-cases",
    "relUrl": "/en/#use-cases"
  },"4": {
    "doc": "User Guide",
    "title": "Setup Overview",
    "content": ". | Set up a server to run FRL Online Proxy | Install the proxy | Acquire or generate SSL certificates if needed | Run the proxy | Set up logging if desired | Run the proxy as a service | Create and deploy proxy-enabled packages | . ",
    "url": "/frl-online-proxy/en/#setup-overview",
    "relUrl": "/en/#setup-overview"
  },"5": {
    "doc": "User Guide",
    "title": "Set up a server",
    "content": "FRL Online Proxy will run on any modern Windows or Linux server. To run in passthrough mode, the server must be part of the isolated network and be able to communicate with Adobe’s licensing service (https://lcs-cops.adobe.io). It does not require Internet access to any other host or service. If the server does not have consistent (or any) access to the licensing service, the proxy should be run in cache or store mode. cache mode will cache all license activation and deactivation requests from FRL clients and attempt to fulfill them with the licensing service. store will just cache requests without attempting to contact the licensing service. We recommend creating a dedicated user account to run the proxy service. Note that it may be necessary to elevate this account’s privileges if the proxy needs to listen on privileged ports like 80 or 443. Regardless of the port that will be used, the system must be configured to allow traffic from any host on the desired port (e.g. 0.0.0.0:8443). ",
    "url": "/frl-online-proxy/en/#set-up-a-server",
    "relUrl": "/en/#set-up-a-server"
  },"6": {
    "doc": "User Guide",
    "title": "Installing the Proxy",
    "content": "Windows . | Download the latest release. | Open the application zip | Copy the frl-proxy directory to your desired root location | Open a PowerShell terminal | Change directory to the frl-proxy location &gt; cd c:\\path\\to\\frl-proxy . | Run the proxy &gt; .\\frl-proxy.exe start . | . Linux . | Download the latest release. We recommend downloading it to the root of the proxy directory (e.g. /home/[user]) $ wget https://github.com/adobe/frl-online-proxy/releases/download/v0.5.1/frl-proxy-linux-0.5.1.tar.gz . | Extract the archive $ tar xf frl-proxy-linux-0.5.1.tar.gz . | The archive will extract to the directory frl-proxy, which contains the application binary $ cd frl-proxy $ ./frl-proxy start . | . ",
    "url": "/frl-online-proxy/en/#installing-the-proxy",
    "relUrl": "/en/#installing-the-proxy"
  },"7": {
    "doc": "User Guide",
    "title": "Running the Proxy",
    "content": "The proxy service and associated tools are designed to be used from the command-line. Open a command-line terminal on the server and switch to the frl-proxy directory. $ cd /path/to/frl-proxy . Start the proxy with the start command. # Windows &gt; .\\frl-proxy.exe start # Linux $ ./frl-proxy start . When you start the proxy for the first time, you will be prompted to specify a few configuration options. This includes run mode, host IP, host ports, SSL info, caching info, etc. These settings are saved to a configuration file. When the configuration file is present, the proxy will start without prompting for these options an additional time. Example configuration transcript: . Creating initial configuration file... The proxy has four modes: cache, store, forward, and passthrough. Read the user guide to understand which is right for each situation. Proxy mode: cache The proxy uses a SQLite database to keep track of requests and responses. The proxy will create this database if one does not already exist. Name of (or path to) your database file: proxy-cache.sqlite The host and port of the proxy must match the one in your license package. Host IP to listen on: 0.0.0.0 Host port for http (non-ssl) mode: 8080 Your proxy server must contact one of two Adobe licensing servers. Use the variable IP server unless your firewall doesn't permit it. Adobe licensing server: Variable IP server (lcs-cops.adobe.io) MacOS applications can only connect to the proxy via SSL. Windows applications can use SSL, but they don't require it. Use SSL? yes Host port for https mode: 8443 The proxy requires a certificate store in PKCS format to use SSL. Read the user guide to learn how to obtain and prepare this file. Name of (or path to) your cert file: proxy-cert.pfx Usually, for security, PKCS files are encrypted with a password. Your proxy will require that password in order to function properly. You have the choice of storing your password in your config file or in the value of an environment variable (FRL_PROXY_SSL.CERT_PASSWORD). Do you want to store a password in your configuration file? no Do you want to customize your proxy server's logging configuration? yes The proxy can log to the console (standard output) or to a file on disk. Log destination: console The proxy will log errors, warnings and summary information. Do you want to adjust the level of logged information? yes Read the user guide to find out more about logging levels. Log level: debug Wrote config file 'proxy-conf.toml' . Once the configuration wizard completes, configuration options are written to proxy-conf.toml. Once the configuration file is created, run the same command to start the proxy. # Windows &gt; .\\frl-proxy.exe start # Linux $ ./frl-proxy start . The configuration file can be edited in any text editor. You can also use the configure command to initiate a walkthrough of configuration options similar to the one presented on initial configuration. ",
    "url": "/frl-online-proxy/en/#running-the-proxy",
    "relUrl": "/en/#running-the-proxy"
  },"8": {
    "doc": "User Guide",
    "title": "Command and usage summary",
    "content": "Proxy functionality is driven by command. The main command, start, is used to run the proxy according to the configuration file. Other commands exist to help configure the proxy or manage the cache. To get a full list of supported options and commands, pass the -h or --help option. &gt; .\\frl-proxy.exe -h frl-proxy 1.0.0 FRL Proxy USAGE: frl-proxy.exe [FLAGS] [OPTIONS] &lt;SUBCOMMAND&gt; FLAGS: -d Specify once to force log level to debug. Specify twice to force log level to trace -h, --help Prints help information -V, --version Prints version information OPTIONS: -c, --config-file &lt;config-file&gt; Path to config file [default: proxy-conf.toml] -l, --log-to &lt;log-to&gt; Override configured log destination: 'console' or 'file'. You can use just the first letter, so '-l c' and '-l f' work SUBCOMMANDS: clear Clear the cache (requires confirmation) configure Interactively create the config file export Export stored requests for a forwarder help Prints this message or the help of the given subcommand(s) import Import stored responses from a forwarder start Start the proxy server . This not only documents supported commands, but shows which flags and options can be used with any command. | -c/--config-file - specify config file path (default is proxy-conf.toml) | -d - change log verbosity | -l/--log-to - change log target | . Any of these options must be specified before the command. For example: . $ ./frl-proxy -l console -c /path/to/proxy-conf.toml start . The start command provides a limited number of command-line options to override certain configuration file options. -m, --mode &lt;mode&gt; Mode to run the proxy in, one of passthrough, cache, store, or forward. You can use any prefix of these names (minimally p, c, s, or f) --ssl &lt;ssl&gt; Enable SSL? (true or false) . These are specified after the start command. $ ./frl-proxy start -m cache . ",
    "url": "/frl-online-proxy/en/#command-and-usage-summary",
    "relUrl": "/en/#command-and-usage-summary"
  },"9": {
    "doc": "User Guide",
    "title": "SSL",
    "content": "The proxy supports both SSL (https) and non-SSL (http) clients. This allows customers the opportunity to examine the actual data transferred during the activation process and so ensure that no sensitive data is being exchanged. (Please note: Adobe applications running on MacOS cannot be configured to send activation requests via HTTP, but customers can use an HTTPS to HTTP proxy between those applications and the FRL proxy so that it can be used in non-SSL-client mode.) . SSL mode requires an X.509 SSL certificate and password. The certificate file should be secured with limited file permissions so that only the account running the proxy can read it. The password can be stored in plain text in the configuration file or in the environment variable FRL_PROXY_SSL.CERT_PASSWORD. If you store your password in the configuration, be sure to limit access to that file. The SSL certificate must be trusted by the client machines that contact the proxy, but it need not be a publicly-signed certificate (that is, it can be a self-signed certificate that is installed on the client machines and marked as trusted). For testing, you may wish to use a free, short-lived, renewable, publicly-signed certificate obtained from Let’s Encrypt. Consult your organization’s network security team if you need to use a long-lived, publicly-signed certificate. SSL options are configured in proxy-conf.toml: . [proxy] ssl = true [ssl] cert_path = \"proxy-cert.pfx\" cert_password = \"password\" . SSL mode can be toggled with the --ssl command-line option: . Example: . $ ./frl-proxy start --ssl false . ",
    "url": "/frl-online-proxy/en/#ssl",
    "relUrl": "/en/#ssl"
  },"10": {
    "doc": "User Guide",
    "title": "Cache, Store and Forward",
    "content": "The most basic mode, passthrough, forwards live calls to Adobe’s licensing services without caching any data. It doesn’t cache any license activation or deactivation requests, and requires a live connection to the Internet at all times. The proxy can be set up to use a local cache to store data for various use cases. | Requests - Activation and deactivation requests are cached in cache and store mode. If an activation/deactivation response for a given request is unavailable, it can be retrieved at a later time when Internet connectivity is available. | Responses - Activation and deactivation responses are cached to ensure that client packages can operate as expected when they get a valid cached response from the proxy. | . The mode can be set in proxy-conf.toml: . [proxy] mode = \"cache\" . It can also be overridden using the -m/--mode command-line option: . $ ./frl-proxy start --mode cache . ",
    "url": "/frl-online-proxy/en/#cache-store-and-forward",
    "relUrl": "/en/#cache-store-and-forward"
  },"11": {
    "doc": "User Guide",
    "title": "Cache Management",
    "content": "The proxy provides commands to clear, import or export the cache. clear Clear the cache (requires confirmation) export Export stored requests for a forwarder import Import stored responses from a forwarder . ",
    "url": "/frl-online-proxy/en/#cache-management",
    "relUrl": "/en/#cache-management"
  },"12": {
    "doc": "User Guide",
    "title": "Clear",
    "content": "The clear command will clear the cache. No backup is made, so use this command with caution. Running clear by itself will prompt for confirmation: . $ ./frl-proxy clear Really clear the cache? This operation cannot be undone. yes Cache has been cleared. The -y option can be used to bypass this confirmation, in case you need to clear the cache automatically without human interaction: . $ ./frl-proxy clear -y Cache has been cleared. ",
    "url": "/frl-online-proxy/en/#clear",
    "relUrl": "/en/#clear"
  },"13": {
    "doc": "User Guide",
    "title": "Export",
    "content": "A proxy running in store mode can use the export command to export all unfulfilled license requests to a database file. frl-proxy.exe-export 1.0.0 Export stored requests for a forwarder USAGE: frl-proxy.exe export &lt;export-path&gt; FLAGS: -h, --help Prints help information -V, --version Prints version information ARGS: &lt;export-path&gt; . export takes one positional argument - the filename of the database file that will contain exported data. Example: . $ ./frl-proxy export proxy-store.sqlite Exported 24 stored request(s) to proxy-store.sqlite . ",
    "url": "/frl-online-proxy/en/#export",
    "relUrl": "/en/#export"
  },"14": {
    "doc": "User Guide",
    "title": "Import",
    "content": "import is used with a proxy that will run in forward mode to fulfill a batch of unfulfilled license requests. It imports request data from a database file that was generated using export. frl-proxy.exe-import 1.0.0 Import stored responses from a forwarder USAGE: frl-proxy.exe import &lt;import-path&gt; FLAGS: -h, --help Prints help information -V, --version Prints version information ARGS: &lt;import-path&gt; . The positional argument specifies that path of a data file to import. $ ./frl-proxy import proxy-store.sqlite Imported 24 forwarded request/response pair(s) from proxy-store.sqlite . ",
    "url": "/frl-online-proxy/en/#import",
    "relUrl": "/en/#import"
  },"15": {
    "doc": "User Guide",
    "title": "Working with an Upstream Proxy",
    "content": "The FRL Online Proxy can be configured to use an upstream proxy in order to communicate with Adobe’s licensing service. It can be used with no authentication or with basic authentication. It can be configured using the interactive configuration wizard (with ./frl-proxy configure) or manually in the config file. ",
    "url": "/frl-online-proxy/en/#working-with-an-upstream-proxy",
    "relUrl": "/en/#working-with-an-upstream-proxy"
  },"16": {
    "doc": "User Guide",
    "title": "Proxy Configuration",
    "content": "The configuration file is named proxy-conf.toml by default. It uses TOML syntax. Running start for the first time will start a configuration wizard that will prompt you to set up the configuration file. The configuration file can be updated at any time by using the configure command. Example: . [proxy] mode = \"cache\" host = \"0.0.0.0\" port = \"8080\" ssl_port = \"8443\" remote_host = \"https://lcs-cops.adobe.io\" ssl = true [ssl] cert_path = \"proxy-cert.pfx\" cert_password = \"\" [logging] level = \"debug\" destination = \"console\" file_path = \"proxy-log.log\" [cache] db_path = \"proxy-cache.sqlite\" [network] use_proxy = false proxy_host = \"127.0.0.1\" proxy_port = \"8888\" use_basic_auth = false proxy_username = \"\" proxy_password = \"\" . ",
    "url": "/frl-online-proxy/en/#proxy-configuration",
    "relUrl": "/en/#proxy-configuration"
  },"17": {
    "doc": "User Guide",
    "title": "Proxy Options",
    "content": "The configuration options in the [proxy] section of the config file govern proxy behavior. | Option | Purpose | . | mode | Mode of operation - passthrough, cache, store, or forwardOverridden with -m/--mode | . | host | The host IP the proxy listens on | . | port | The host port the proxy listens on in http (non-SSL) mode | . | ssl_port | The host port the proxy listens on in https (SSL) mode | . | remote_host | Adobe Licensing Service endpoint | . | ssl | Enable (true) or disable (false) SSLOverridden with -ssl | . ",
    "url": "/frl-online-proxy/en/#proxy-options",
    "relUrl": "/en/#proxy-options"
  },"18": {
    "doc": "User Guide",
    "title": "SSL Options",
    "content": "The configuration options in the [ssl] section of the config file specify SSL certificate options . | Option | Purpose | . | cert_path | Path to SSL certificate file. Required if ssl is true and ignored otherwise | . | cert_password | SSL certificate password. IF not specified, then the environment variable FRL_PROXY_SSL.CERT_PASSWORD is checked | . ",
    "url": "/frl-online-proxy/en/#ssl-options",
    "relUrl": "/en/#ssl-options"
  },"19": {
    "doc": "User Guide",
    "title": "Logging Options",
    "content": "Options in the [logging] section govern logging behavior. By default, the proxy will log to the console (stdout) at the info verbosity level. The config can be used to change the console logging verbosity level or write log data to a file at a potentially different verbosity level. | Option | Purpose | . | level | Set the verbosity level for log output-d overrides this and sets level to debug-dd will set level to trace | . | destination | Log to console or fileOverridden with -l/--log-to | . | file_path | Filename for file log output. Ignored if destination is console | . Verbosity settings . The log verbosity level governs the nature and amount of information that is written to the log. The proxy supports five levels, which can be set in the config file. Log messages are prioritized based on message type - setting verbosity to a certain level will write messages at that level’s priority and anything above it. For example, setting the level to warn will output warnings and errors. | Level | Priority | Purpose | . | error | 1 | Errors that impact the performance or reliability of the application | . | warn | 2 | Warnings that may indicate an issue, but should not impact general performance or reliability | . | info | 3 | Useful messages | . | debug | 4 | Lower-priority messages that may be useful for debugging purposes | . | trace | 5 | Low-level application debugging information | . ",
    "url": "/frl-online-proxy/en/#logging-options",
    "relUrl": "/en/#logging-options"
  },"20": {
    "doc": "User Guide",
    "title": "Cache Options",
    "content": "[cache] specifies cache options . | Option | Purpose | . | db_path | Path to cache DB | . ",
    "url": "/frl-online-proxy/en/#cache-options",
    "relUrl": "/en/#cache-options"
  },"21": {
    "doc": "User Guide",
    "title": "Network Options",
    "content": "[network] configures upstream proxy options. | Option | Purpose | . | use_proxy | Enable upstream proxy connection | . | proxy_host | Hostname or IP address of upstream proxy | . | proxy_port | Port to use for upstream proxy connection | . | use_basic_auth | Enable basic authentication? | . | proxy_username | Username for basic authentication | . | proxy_password | Password for basic authentication | . ",
    "url": "/frl-online-proxy/en/#network-options",
    "relUrl": "/en/#network-options"
  },"22": {
    "doc": "User Guide",
    "title": "Running as a service",
    "content": "To ensure the highest level of availability and reliability, the proxy should be run as a service. This ensures that the proxy is always running. If the service is interrupted for any reason (such as system reboot), it will automatically restart. There are different methods for installing and enabling the proxy as a service depending on the environment. ",
    "url": "/frl-online-proxy/en/#running-as-a-service",
    "relUrl": "/en/#running-as-a-service"
  },"23": {
    "doc": "User Guide",
    "title": "Windows",
    "content": "Windows realeases of FRL Online Proxy include tools for setting up the service. The script bin\\service.ps1 provides a simple interface for managing the proxy as a service. Example: . &gt; .\\service.ps1 start Service \"FRL Online Proxy\" installed successfully! FRL Online Proxy: START: The operation completed successfully. Notes: . | Windows Powershell is required to run service.ps1 | Administrator rights are required to install the service, so run service.ps1 from a Powershell Admin console. | service.ps1 must be run from the frl-proxy working directory | A config file is required with the filename proxy-conf.toml. This file must be in the same working directory as frl-proxy.exe and service.ps1. See Proxy configuration for more information. | . Commands: . | Command | Purpose | . | start | Install and start the proxy as a service. | . | stop | Stop the proxy service | . | restart | Restart the proxy service | . | remove | Stop the service if necessary and remove from the registry | . When the service is installed and running, you can view the status of the service in Windows Service Manager. | Open the run dialog - Windows Key + R | Enter the command services.msc | Press Enter | The Service Manager will open showing a list of services installed on the system | Ensure that FRL Online Proxy is installed, running and has a Startup Type of “Automatic” | . If something doesn’t work as expected, see Getting help. ",
    "url": "/frl-online-proxy/en/#windows-1",
    "relUrl": "/en/#windows-1"
  },"24": {
    "doc": "User Guide",
    "title": "Linux",
    "content": "On Linux systems, the easiest way to set up a service for the proxy is systemd. Note: sudo privileges are required for many of these steps. We recommend creating or designating a non-privileged user account that will run the proxy and own the configuration and log files. | Download the latest release to the desired system. | Extract the frl-proxy binary to a system binary directory such as /usr/bin | Generate a config file (see Proxy configuration) | Open the config file in a text editor and configure proxy and logging settings (host, ssl settings) . | If the proxy will be run by a non-privileged account, it is necessary to set the proxy to listen on a port number higher than 1024 (e.g. 4343) | The config file should be copied to a system data directory (we recommend /etc/frl-proxy) | The log file should be written to a system log directory such as /var/log (we recommend /var/log/frl-proxy) | . | If you are going to run the proxy as a non-privileged user, change ownership of config file and log directory. Replace [user] and [group] with the user and group of the non-privileged account. | sudo chown [user]:[group] /etc/frl-proxy/proxy-conf.toml | sudo chown -R [user]:[group] /var/log/frl-proxy | . | Create the service configuration file /etc/systemd/system/frl-proxy.service and open it in a text editor | Copy this example configuration to the editor. Be sure to change the paths to the proxy binary and config file if necessary. And replace [user] with the name of the account that will run the proxy. [Unit] Description=FRL Online Proxy After=network.target StartLimitIntervalSec=0 [Service] Type=simple Restart=always RestartSec=1 User=[user] ExecStart=/usr/bin/frl-proxy -c /etc/frl-proxy/proxy-conf.toml start [Install] WantedBy=multi-user.target . | . With the service config in place, the service can be controlled with systemctl. Here are some examples of how to manage the service. # Enable/disable determines if the service will start on boot sudo systemctl enable frl-proxy sudo systemctl disable frl-proxy # Start/stop will manually start and stop the service, restart will stop and then start it sudo systemctl start frl-proxy sudo systemctl stop frl-proxy sudo systemctl restart frl-proxy # If any changes are made to the frl-proxy.service config, the systemd daemon must be reloaded sudo systemctl daemon-reload . If something doesn’t work as expected, see Getting help. ",
    "url": "/frl-online-proxy/en/#linux-1",
    "relUrl": "/en/#linux-1"
  },"25": {
    "doc": "User Guide",
    "title": "Creating proxy-enabled packages",
    "content": "FRL-Online packages must be configured to use the proxy. Proxy settings are managed in the Adobe Admin Console. | Log into the Admin Console | Click the “Packages” tab on the top navigation bar. | Click the blue “Create a Package” button. | Select “Feature restricted licensing” and then “Next” | Select “Online” and then “Next” | Select entitlement, OS and product (app) options | On the next page, under “Management Options”, select “Contact Adobe through a reverse proxy” . Update the “DNS Entry or IP address” field to point to the FRL Online Proxy service. This can be a plain IP address or a hostname. Don’t forget to specify the port number if using a non-standard port. | . ",
    "url": "/frl-online-proxy/en/#creating-proxy-enabled-packages",
    "relUrl": "/en/#creating-proxy-enabled-packages"
  },"26": {
    "doc": "User Guide",
    "title": "Getting help",
    "content": "All bug requests, feature requests, questions and feedback submissions are handled with Github issues. Please create a new issue if you need any assisance or support. ",
    "url": "/frl-online-proxy/en/#getting-help",
    "relUrl": "/en/#getting-help"
  },"27": {
    "doc": "User Guide",
    "title": "User Guide",
    "content": " ",
    "url": "/frl-online-proxy/en/",
    "relUrl": "/en/"
  }
}
